%----------------------------------------------------------------------------------------
%	PACKAGES AND DOCUMENT CONFIGURATIONS
%----------------------------------------------------------------------------------------

\documentclass[a4paper,12pt]{article}

\usepackage{amsmath} % Required for some math elements
\usepackage{comment}  % Required for multiline comments
\usepackage{geometry}
\usepackage{graphicx} % Required for the inclusion of images
\usepackage{natbib} % Required to change bibliography style to ABB
\usepackage[linesnumbered,ruled,vlined,algo2e]{algorithm2e} % Required for presenting algorithms
\usepackage{setspace} % This is used in the title page

\usepackage{times}

\newcommand{\newpar}{\smallskip\noindent} %command to create new paragraph with no ident.
%----------------------------------------------------------------------------------------
%	DOCUMENT INFORMATION
%----------------------------------------------------------------------------------------
\begin{document}

\newgeometry{top=2cm, bottom=2cm, right=2cm, left=2cm}

\begin{center}
{\large Ben-Gurion University of the Negev \\ Faculty of Engineering Science \\ Department of Information Systems Engineering} \\
\begin{spacing}{1.5}
\vspace*{2mm}
\textbf{Final Report} \\
{\LARGE \uppercase{OCCT: One-Class Clustering Tree \\ Implementation for Weka}}
\end{spacing}
\vspace*{2mm}
{\large \textbf{Vitali Sepetnitsky, Maor Tal}} \\
\vspace*{2mm}
\textbf{Instructor:} Dr. Asaf Shabtai \\
\vspace*{2mm}
\textbf{\date{\today}} % Date for the report
\end{center}

%----------------------------------------------------------------------------------------
%	SECTION 1 - Introduction
%----------------------------------------------------------------------------------------
\begin{spacing}{1.5}

\section{Introduction}
Data linkage is the task of identifying different entries (i.e., data items) that refer to the same
entity across different data sources \cite{damaging2011}, \cite{kamra2008detecting}. Record linkage refers to the task of joining datasets
that do not share a common identifier (i.e., a foreign key).

\subsection{OCCT}
The two common types of data linkage are:
\begin{itemize}
  \item \emph{one-to-one} data linkage in which the goal is to associate
an entity from one dataset with a single matching entity from the another dataset.
  \item \emph{one-to-many} where the goal is to associate an entity from the first
   dataset to a group of matching entities from the other dataset.
\end{itemize}
\newpar{OCCT} (One-Class Clustering Tree) is a novel data linkage method, presented in \cite{dror2011thesis} and \cite{dror2014occt},
which is capable of performing one-to-many data linkage between entities of same or different
types. The tree is built such that it is easy to transform it into association rules.

One of the major advantages of OCCT compared to other data linkage methods, is using the
one-class approach. This means that it needs only examples of matching pairs in order to learn
and build the model. This feature is important since in many domains it is difficult to obtain
nonmatching examples (e.g. the fraud detection domain).

Building the tree requires deciding which attribute should be selected at each level. There are
four different “splitting criteria” proposed by the authors in \cite{dror2014occt}, along with two pre-pruning process,
to stop expanding branches that does not improve the accuracy of the model.

Once the construction of the tree is completed, a set of probabilistic models are induced for each
of the leafs of the tree.
Each model is deriving the probability of a value of a given attribute from table ($T_{B}$) that
is most likely to be linked with a record from the first table ($T_{A}$).

\subsection{Weka}
Weka (Waikato Environment for Knowledge Analysis) is a suite of machine learning software
which contains a collection of algorithms and visualization tools for data analysis and machine
learning, along with graphical user interfaces for easy access to its functionality. Weka is
free software available under the GNU General Public License.
It is written in Java and developed at the University of Waikato, New Zealand. Weka is also well-suited
for developing new machine learning schemes.

%----------------------------------------------------------------------------------------
%	SECTION 2 - Motivation, Project Goals
%----------------------------------------------------------------------------------------
\section{Motivation}
OCCT was evaluated by the authors in \cite{dror2011thesis} and \cite{dror2014occt} as a part of a detection system framework
designed for detecting potential data leakage/misuse. The detection system was
designed to incorporate multiple detectors as plug-ins, where each detector implements a
different detection algorithm, such as OCCT.

The original implementation suffered from many drawbacks, especially it was designed for a
specific domain and did not use any common interfaces which are used in Weka. This made it impossible to
be used by other researchers in order to perform more extensive evaluation and research on OCCT.
In addition evaluating OCCT versus other data linkage algorithms which are already implemented within Weka
was a tedious task.

Our project goal is to implement OCCT, using Weka common API for machine learning
algorithms, and provide basic evaluation of OCCT using our implementation. We intend to add
OCCT as one of the classifiers in Weka UI and make it available to researchers who wishes to further
evaluate OCCT.

%----------------------------------------------------------------------------------------
%	SECTION 3 - Code Structure
%----------------------------------------------------------------------------------------
\section{Code Structure}
The code was carefully designed in order to be flexible for future extensions and also be as readable as possible.
Its implementation is based on the J48, which is an open source Java implementation of the C4.5 algorithm in Weka.

\clearpage
\subsection{Main structure}
\begin{figure}[!h]
    \centering
\includegraphics[width=1\textwidth]{Figures/MainStructure}
    \caption{Main OCCT structure}
    \label{fig:mainstr}
\end{figure}








\section{Future Work and Extensions}
\begin{comment}
The major drawback of OCCT which has not been overcame in the implementation is too many possible configurations (four splitting criteria and two pruning methods). Thus, a characterization is required in order to decide which splitting criteria and pruning method should be used in each type of domain.
\end{comment}

There is still a lot of work that can be done in order to improve and extend the current implementation and allow it to be ran on more datasets. 

First, as noted in \cite{dror2011thesis}, the proposed OCCT algorithm is only capable of handling discrete data. Thus, it cannot analyze attributes that consist of continuous values. In case a dataset with such an attribute is given as an input, some kind of discretization must be applied on the continues attributes in order to make them semi-nominal. In the current version of the implementation, Weka disables the possibility to ran the algorithm on datasets if they have at least on attribute that is not nominal. This is implemented by using the {\em Capabilities} class of Weka, which ensures that features (e.g. handling certain types of attributes) are enabled explicitly.

Other problem with the current implementation refers to the input format of the algorithm; currently, OCCT is referred as a classification algorithm, which means that it is located under 'Classifiers' in the 'Classify' tab of Weka and uses the common GUI of a classifier. However, OCCT purpose is solving data linkage problems. The uniqueness of these problems is receiving two datasets as an input and also irrelevant class attribute of the dataset. This type of input does not exist in the 'Classify' tab of the GUI chooser of Weka. Thus, we added an index which is given as an input, which defines the first column of $T_B$ in the input. Weka has an option of adding extra tabs in the Explorer in order to add new functionality without the hassle of having to dig into the Explore code. We suggest to add a new tab for data linkage algorithms. This tab should be similar to the Classify tab, but it will allow the user to choose two different datasets for $T_A$ and $T_B$.

%----------------------------------------------------------------------------------------
\bibliographystyle{unsrt}
\bibliography{refFile}
\restoregeometry
\end{spacing}

\end{document}
